{"ast":null,"code":"var _jsxFileName = \"/Users/HariPrasad.Renganath/Documents/Temp Projects/Pomodoro clock/pomodoro-timer/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport { useState } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport Confetti from 'react-confetti';\nimport { GlobalStyles } from './styles/GlobalStyles';\nimport { Timer } from './components/Timer';\nimport { Controls } from './components/Controls';\nimport { Settings } from './components/Settings';\nimport { TimeSettings } from './components/TimeSettings';\nimport { useTimer } from './hooks/useTimer';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [showSettings, setShowSettings] = useState(false);\n  const {\n    time,\n    isActive,\n    type,\n    settings,\n    showConfetti,\n    currentQuote,\n    setTime,\n    setIsActive,\n    changeType,\n    updateSettings,\n    startTimer\n  } = useTimer();\n  const resetTimer = () => {\n    setIsActive(false);\n    setTime(settings[type]);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyles, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), showConfetti && /*#__PURE__*/_jsxDEV(Confetti, {\n      width: window.innerWidth,\n      height: window.innerHeight,\n      recycle: false,\n      numberOfPieces: 500\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(Timer, {\n      time: time,\n      type: type,\n      currentQuote: currentQuote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Controls, {\n      isActive: isActive,\n      setIsActive: active => {\n        if (active) {\n          startTimer();\n        } else {\n          setIsActive(false);\n        }\n      },\n      resetTimer: resetTimer,\n      onSettingsClick: () => setShowSettings(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Settings, {\n      currentType: type,\n      onTypeChange: changeType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TimeSettings, {\n      isOpen: showSettings,\n      onClose: () => setShowSettings(false),\n      settings: settings,\n      onSave: newSettings => {\n        updateSettings(newSettings);\n        setShowSettings(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"W0OTpoLpQ0f/HcraKtNSe1RolXw=\", false, function () {\n  return [useTimer];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","ToastContainer","Confetti","GlobalStyles","Timer","Controls","Settings","TimeSettings","useTimer","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","showSettings","setShowSettings","time","isActive","type","settings","showConfetti","currentQuote","setTime","setIsActive","changeType","updateSettings","startTimer","resetTimer","children","fileName","_jsxFileName","lineNumber","columnNumber","width","window","innerWidth","height","innerHeight","recycle","numberOfPieces","active","onSettingsClick","currentType","onTypeChange","isOpen","onClose","onSave","newSettings","_c","$RefreshReg$"],"sources":["/Users/HariPrasad.Renganath/Documents/Temp Projects/Pomodoro clock/pomodoro-timer/src/App.js"],"sourcesContent":["// App.js\nimport { useState } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport Confetti from 'react-confetti';\nimport { GlobalStyles } from './styles/GlobalStyles';\nimport { Timer } from './components/Timer';\nimport { Controls } from './components/Controls';\nimport { Settings } from './components/Settings';\nimport { TimeSettings } from './components/TimeSettings';\nimport { useTimer } from './hooks/useTimer';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction App() {\n  const [showSettings, setShowSettings] = useState(false);\n  const { \n    time, \n    isActive, \n    type, \n    settings,\n    showConfetti,\n    currentQuote,\n    setTime, \n    setIsActive, \n    changeType,\n    updateSettings,\n    startTimer\n  } = useTimer();\n\n  const resetTimer = () => {\n    setIsActive(false);\n    setTime(settings[type]);\n  };\n\n  return (\n    <>\n      <GlobalStyles />\n      {showConfetti && <Confetti \n        width={window.innerWidth}\n        height={window.innerHeight}\n        recycle={false}\n        numberOfPieces={500}\n      />}\n      <Timer \n        time={time} \n        type={type} \n        currentQuote={currentQuote}\n      />\n      <Controls \n        isActive={isActive} \n        setIsActive={(active) => {\n          if (active) {\n            startTimer();\n          } else {\n            setIsActive(false);\n          }\n        }}\n        resetTimer={resetTimer}\n        onSettingsClick={() => setShowSettings(true)}\n      />\n      <Settings \n        currentType={type}\n        onTypeChange={changeType}\n      />\n      <TimeSettings \n        isOpen={showSettings}\n        onClose={() => setShowSettings(false)}\n        settings={settings}\n        onSave={(newSettings) => {\n          updateSettings(newSettings);\n          setShowSettings(false);\n        }}\n      />\n      <ToastContainer />\n    </>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}