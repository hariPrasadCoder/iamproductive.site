{"ast":null,"code":"var _jsxFileName = \"/Users/HariPrasad.Renganath/Documents/Temp Projects/Pomodoro clock/pomodoro-timer/src/App.js\",\n  _s = $RefreshSig$();\nimport { GlobalStyles } from './styles/GlobalStyles';\nimport { Timer } from './components/Timer';\nimport { Controls } from './components/Controls';\nimport { Settings } from './components/Settings';\nimport { useTimer } from './hooks/useTimer';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    time,\n    isActive,\n    type,\n    setTime,\n    setIsActive,\n    changeType\n  } = useTimer();\n  const resetTimer = () => {\n    setIsActive(false);\n    setTime(25 * 60);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyles, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Timer, {\n      time: time,\n      type: type\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Controls, {\n      isActive: isActive,\n      setIsActive: setIsActive,\n      resetTimer: resetTimer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Settings, {\n      currentType: type,\n      onTypeChange: changeType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"KAnk/KZcWVFas+RDvacLLQ3QZ40=\", false, function () {\n  return [useTimer];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["GlobalStyles","Timer","Controls","Settings","useTimer","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","time","isActive","type","setTime","setIsActive","changeType","resetTimer","children","fileName","_jsxFileName","lineNumber","columnNumber","currentType","onTypeChange","_c","$RefreshReg$"],"sources":["/Users/HariPrasad.Renganath/Documents/Temp Projects/Pomodoro clock/pomodoro-timer/src/App.js"],"sourcesContent":["import { GlobalStyles } from './styles/GlobalStyles';\nimport { Timer } from './components/Timer';\nimport { Controls } from './components/Controls';\nimport { Settings } from './components/Settings';\nimport { useTimer } from './hooks/useTimer';\n\nfunction App() {\n  const { \n    time, \n    isActive, \n    type, \n    setTime, \n    setIsActive, \n    changeType \n  } = useTimer();\n\n  const resetTimer = () => {\n    setIsActive(false);\n    setTime(25 * 60);\n  };\n\n  return (\n    <>\n      <GlobalStyles />\n      <Timer time={time} type={type} />\n      <Controls \n        isActive={isActive} \n        setIsActive={setIsActive} \n        resetTimer={resetTimer}\n      />\n      <Settings \n        currentType={type}\n        onTypeChange={changeType}\n      />\n    </>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,SAASA,YAAY,QAAQ,uBAAuB;AACpD,SAASC,KAAK,QAAQ,oBAAoB;AAC1C,SAASC,QAAQ,QAAQ,uBAAuB;AAChD,SAASC,QAAQ,QAAQ,uBAAuB;AAChD,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM;IACJC,IAAI;IACJC,QAAQ;IACRC,IAAI;IACJC,OAAO;IACPC,WAAW;IACXC;EACF,CAAC,GAAGZ,QAAQ,CAAC,CAAC;EAEd,MAAMa,UAAU,GAAGA,CAAA,KAAM;IACvBF,WAAW,CAAC,KAAK,CAAC;IAClBD,OAAO,CAAC,EAAE,GAAG,EAAE,CAAC;EAClB,CAAC;EAED,oBACER,OAAA,CAAAE,SAAA;IAAAU,QAAA,gBACEZ,OAAA,CAACN,YAAY;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChBhB,OAAA,CAACL,KAAK;MAACU,IAAI,EAAEA,IAAK;MAACE,IAAI,EAAEA;IAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjChB,OAAA,CAACJ,QAAQ;MACPU,QAAQ,EAAEA,QAAS;MACnBG,WAAW,EAAEA,WAAY;MACzBE,UAAU,EAAEA;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACFhB,OAAA,CAACH,QAAQ;MACPoB,WAAW,EAAEV,IAAK;MAClBW,YAAY,EAAER;IAAW;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAAA,eACF,CAAC;AAEP;AAACZ,EAAA,CA9BQD,GAAG;EAAA,QAQNL,QAAQ;AAAA;AAAAqB,EAAA,GARLhB,GAAG;AAgCZ,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}