{"ast":null,"code":"// App.js\nimport{useState}from'react';import{ToastContainer}from'react-toastify';import Confetti from'react-confetti';import{GlobalStyles}from'./styles/GlobalStyles';import{Timer}from'./components/Timer';import{Controls}from'./components/Controls';import{Settings}from'./components/Settings';import{TimeSettings}from'./components/TimeSettings';import{useTimer}from'./hooks/useTimer';import'react-toastify/dist/ReactToastify.css';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[showSettings,setShowSettings]=useState(false);const{time,isActive,type,settings,showConfetti,currentQuote,setTime,setIsActive,changeType,updateSettings,startTimer}=useTimer();const resetTimer=()=>{setIsActive(false);setTime(settings[type]);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(GlobalStyles,{}),showConfetti&&/*#__PURE__*/_jsx(Confetti,{width:window.innerWidth,height:window.innerHeight,recycle:false,numberOfPieces:500}),/*#__PURE__*/_jsx(Timer,{time:time,type:type,currentQuote:currentQuote}),/*#__PURE__*/_jsx(Controls,{isActive:isActive,setIsActive:active=>{if(active){startTimer();}else{setIsActive(false);}},resetTimer:resetTimer,onSettingsClick:()=>setShowSettings(true)}),/*#__PURE__*/_jsx(Settings,{currentType:type,onTypeChange:changeType}),/*#__PURE__*/_jsx(TimeSettings,{isOpen:showSettings,onClose:()=>setShowSettings(false),settings:settings,onSave:newSettings=>{updateSettings(newSettings);setShowSettings(false);}}),/*#__PURE__*/_jsx(ToastContainer,{})]});}export default App;","map":{"version":3,"names":["useState","ToastContainer","Confetti","GlobalStyles","Timer","Controls","Settings","TimeSettings","useTimer","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","App","showSettings","setShowSettings","time","isActive","type","settings","showConfetti","currentQuote","setTime","setIsActive","changeType","updateSettings","startTimer","resetTimer","children","width","window","innerWidth","height","innerHeight","recycle","numberOfPieces","active","onSettingsClick","currentType","onTypeChange","isOpen","onClose","onSave","newSettings"],"sources":["/Users/HariPrasad.Renganath/Documents/Temp Projects/Pomodoro clock/pomodoro-timer/src/App.js"],"sourcesContent":["// App.js\nimport { useState } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport Confetti from 'react-confetti';\nimport { GlobalStyles } from './styles/GlobalStyles';\nimport { Timer } from './components/Timer';\nimport { Controls } from './components/Controls';\nimport { Settings } from './components/Settings';\nimport { TimeSettings } from './components/TimeSettings';\nimport { useTimer } from './hooks/useTimer';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction App() {\n  const [showSettings, setShowSettings] = useState(false);\n  const { \n    time, \n    isActive, \n    type, \n    settings,\n    showConfetti,\n    currentQuote,\n    setTime, \n    setIsActive, \n    changeType,\n    updateSettings,\n    startTimer\n  } = useTimer();\n\n  const resetTimer = () => {\n    setIsActive(false);\n    setTime(settings[type]);\n  };\n\n  return (\n    <>\n      <GlobalStyles />\n      {showConfetti && <Confetti \n        width={window.innerWidth}\n        height={window.innerHeight}\n        recycle={false}\n        numberOfPieces={500}\n      />}\n      <Timer \n        time={time} \n        type={type} \n        currentQuote={currentQuote}\n      />\n      <Controls \n        isActive={isActive} \n        setIsActive={(active) => {\n          if (active) {\n            startTimer();\n          } else {\n            setIsActive(false);\n          }\n        }}\n        resetTimer={resetTimer}\n        onSettingsClick={() => setShowSettings(true)}\n      />\n      <Settings \n        currentType={type}\n        onTypeChange={changeType}\n      />\n      <TimeSettings \n        isOpen={showSettings}\n        onClose={() => setShowSettings(false)}\n        settings={settings}\n        onSave={(newSettings) => {\n          updateSettings(newSettings);\n          setShowSettings(false);\n        }}\n      />\n      <ToastContainer />\n    </>\n  );\n}\n\nexport default App;"],"mappings":"AAAA;AACA,OAASA,QAAQ,KAAQ,OAAO,CAChC,OAASC,cAAc,KAAQ,gBAAgB,CAC/C,MAAO,CAAAC,QAAQ,KAAM,gBAAgB,CACrC,OAASC,YAAY,KAAQ,uBAAuB,CACpD,OAASC,KAAK,KAAQ,oBAAoB,CAC1C,OAASC,QAAQ,KAAQ,uBAAuB,CAChD,OAASC,QAAQ,KAAQ,uBAAuB,CAChD,OAASC,YAAY,KAAQ,2BAA2B,CACxD,OAASC,QAAQ,KAAQ,kBAAkB,CAC3C,MAAO,uCAAuC,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE/C,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAGjB,QAAQ,CAAC,KAAK,CAAC,CACvD,KAAM,CACJkB,IAAI,CACJC,QAAQ,CACRC,IAAI,CACJC,QAAQ,CACRC,YAAY,CACZC,YAAY,CACZC,OAAO,CACPC,WAAW,CACXC,UAAU,CACVC,cAAc,CACdC,UACF,CAAC,CAAGpB,QAAQ,CAAC,CAAC,CAEd,KAAM,CAAAqB,UAAU,CAAGA,CAAA,GAAM,CACvBJ,WAAW,CAAC,KAAK,CAAC,CAClBD,OAAO,CAACH,QAAQ,CAACD,IAAI,CAAC,CAAC,CACzB,CAAC,CAED,mBACEN,KAAA,CAAAF,SAAA,EAAAkB,QAAA,eACEpB,IAAA,CAACP,YAAY,GAAE,CAAC,CACfmB,YAAY,eAAIZ,IAAA,CAACR,QAAQ,EACxB6B,KAAK,CAAEC,MAAM,CAACC,UAAW,CACzBC,MAAM,CAAEF,MAAM,CAACG,WAAY,CAC3BC,OAAO,CAAE,KAAM,CACfC,cAAc,CAAE,GAAI,CACrB,CAAC,cACF3B,IAAA,CAACN,KAAK,EACJc,IAAI,CAAEA,IAAK,CACXE,IAAI,CAAEA,IAAK,CACXG,YAAY,CAAEA,YAAa,CAC5B,CAAC,cACFb,IAAA,CAACL,QAAQ,EACPc,QAAQ,CAAEA,QAAS,CACnBM,WAAW,CAAGa,MAAM,EAAK,CACvB,GAAIA,MAAM,CAAE,CACVV,UAAU,CAAC,CAAC,CACd,CAAC,IAAM,CACLH,WAAW,CAAC,KAAK,CAAC,CACpB,CACF,CAAE,CACFI,UAAU,CAAEA,UAAW,CACvBU,eAAe,CAAEA,CAAA,GAAMtB,eAAe,CAAC,IAAI,CAAE,CAC9C,CAAC,cACFP,IAAA,CAACJ,QAAQ,EACPkC,WAAW,CAAEpB,IAAK,CAClBqB,YAAY,CAAEf,UAAW,CAC1B,CAAC,cACFhB,IAAA,CAACH,YAAY,EACXmC,MAAM,CAAE1B,YAAa,CACrB2B,OAAO,CAAEA,CAAA,GAAM1B,eAAe,CAAC,KAAK,CAAE,CACtCI,QAAQ,CAAEA,QAAS,CACnBuB,MAAM,CAAGC,WAAW,EAAK,CACvBlB,cAAc,CAACkB,WAAW,CAAC,CAC3B5B,eAAe,CAAC,KAAK,CAAC,CACxB,CAAE,CACH,CAAC,cACFP,IAAA,CAACT,cAAc,GAAE,CAAC,EAClB,CAAC,CAEP,CAEA,cAAe,CAAAc,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}