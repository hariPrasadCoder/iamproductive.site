{"ast":null,"code":"import{useState}from'react';// Added this import\nimport styled from'styled-components';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const SettingsModal=styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background: rgba(255, 255, 255, 0.15);\n  backdrop-filter: blur(15px);\n  padding: 2rem;\n  border-radius: 20px;\n  z-index: 1000;\n`;const Overlay=styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  z-index: 999;\n`;const Input=styled.input`\n  width: 100%;\n  padding: 0.5rem;\n  margin: 0.5rem 0;\n  border: none;\n  border-radius: 8px;\n  background: rgba(255, 255, 255, 0.2);\n  color: white;\n  font-size: 1rem;\n\n  &:focus {\n    outline: none;\n    background: rgba(255, 255, 255, 0.3);\n  }\n`;const Button=styled.button`\n  padding: 0.5rem 1rem;\n  margin: 0.5rem;\n  border: none;\n  border-radius: 8px;\n  background: rgba(255, 255, 255, 0.2);\n  color: white;\n  cursor: pointer;\n  transition: all 0.3s ease;\n\n  &:hover {\n    background: rgba(255, 255, 255, 0.3);\n  }\n`;export const TimeSettings=_ref=>{let{isOpen,onClose,settings,onSave}=_ref;const[tempSettings,setTempSettings]=useState({work:settings.work/60,shortBreak:settings.shortBreak/60,longBreak:settings.longBreak/60});if(!isOpen)return null;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Overlay,{onClick:onClose}),/*#__PURE__*/_jsxs(SettingsModal,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Timer Settings\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Work Duration (minutes)\"}),/*#__PURE__*/_jsx(Input,{type:\"number\",value:tempSettings.work,onChange:e=>setTempSettings({...tempSettings,work:parseInt(e.target.value)})})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Short Break (minutes)\"}),/*#__PURE__*/_jsx(Input,{type:\"number\",value:tempSettings.shortBreak,onChange:e=>setTempSettings({...tempSettings,shortBreak:parseInt(e.target.value)})})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Long Break (minutes)\"}),/*#__PURE__*/_jsx(Input,{type:\"number\",value:tempSettings.longBreak,onChange:e=>setTempSettings({...tempSettings,longBreak:parseInt(e.target.value)})})]}),/*#__PURE__*/_jsx(Button,{onClick:()=>onSave({work:tempSettings.work*60,shortBreak:tempSettings.shortBreak*60,longBreak:tempSettings.longBreak*60}),children:\"Save\"}),/*#__PURE__*/_jsx(Button,{onClick:onClose,children:\"Cancel\"})]})]});};","map":{"version":3,"names":["useState","styled","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","SettingsModal","div","Overlay","Input","input","Button","button","TimeSettings","_ref","isOpen","onClose","settings","onSave","tempSettings","setTempSettings","work","shortBreak","longBreak","children","onClick","type","value","onChange","e","parseInt","target"],"sources":["/Users/HariPrasad.Renganath/Documents/Temp Projects/Pomodoro clock/pomodoro-timer/src/components/TimeSettings.js"],"sourcesContent":["import { useState } from 'react';  // Added this import\nimport styled from 'styled-components';\n\nconst SettingsModal = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background: rgba(255, 255, 255, 0.15);\n  backdrop-filter: blur(15px);\n  padding: 2rem;\n  border-radius: 20px;\n  z-index: 1000;\n`;\n\nconst Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  z-index: 999;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  padding: 0.5rem;\n  margin: 0.5rem 0;\n  border: none;\n  border-radius: 8px;\n  background: rgba(255, 255, 255, 0.2);\n  color: white;\n  font-size: 1rem;\n\n  &:focus {\n    outline: none;\n    background: rgba(255, 255, 255, 0.3);\n  }\n`;\n\nconst Button = styled.button`\n  padding: 0.5rem 1rem;\n  margin: 0.5rem;\n  border: none;\n  border-radius: 8px;\n  background: rgba(255, 255, 255, 0.2);\n  color: white;\n  cursor: pointer;\n  transition: all 0.3s ease;\n\n  &:hover {\n    background: rgba(255, 255, 255, 0.3);\n  }\n`;\n\nexport const TimeSettings = ({ isOpen, onClose, settings, onSave }) => {\n  const [tempSettings, setTempSettings] = useState({\n    work: settings.work / 60,\n    shortBreak: settings.shortBreak / 60,\n    longBreak: settings.longBreak / 60,\n  });\n\n  if (!isOpen) return null;\n\n  return (\n    <>\n      <Overlay onClick={onClose} />\n      <SettingsModal>\n        <h2>Timer Settings</h2>\n        <div>\n          <label>Work Duration (minutes)</label>\n          <Input\n            type=\"number\"\n            value={tempSettings.work}\n            onChange={(e) => setTempSettings({\n              ...tempSettings,\n              work: parseInt(e.target.value)\n            })}\n          />\n        </div>\n        <div>\n          <label>Short Break (minutes)</label>\n          <Input\n            type=\"number\"\n            value={tempSettings.shortBreak}\n            onChange={(e) => setTempSettings({\n              ...tempSettings,\n              shortBreak: parseInt(e.target.value)\n            })}\n          />\n        </div>\n        <div>\n          <label>Long Break (minutes)</label>\n          <Input\n            type=\"number\"\n            value={tempSettings.longBreak}\n            onChange={(e) => setTempSettings({\n              ...tempSettings,\n              longBreak: parseInt(e.target.value)\n            })}\n          />\n        </div>\n        <Button onClick={() => onSave({\n          work: tempSettings.work * 60,\n          shortBreak: tempSettings.shortBreak * 60,\n          longBreak: tempSettings.longBreak * 60,\n        })}>Save</Button>\n        <Button onClick={onClose}>Cancel</Button>\n      </SettingsModal>\n    </>\n  );\n};"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,OAAO,CAAG;AACnC,MAAO,CAAAC,MAAM,KAAM,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAEvC,KAAM,CAAAC,aAAa,CAAGP,MAAM,CAACQ,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAED,KAAM,CAAAC,OAAO,CAAGT,MAAM,CAACQ,GAAG;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAED,KAAM,CAAAE,KAAK,CAAGV,MAAM,CAACW,KAAK;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAED,KAAM,CAAAC,MAAM,CAAGZ,MAAM,CAACa,MAAM;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAED,MAAO,MAAM,CAAAC,YAAY,CAAGC,IAAA,EAA2C,IAA1C,CAAEC,MAAM,CAAEC,OAAO,CAAEC,QAAQ,CAAEC,MAAO,CAAC,CAAAJ,IAAA,CAChE,KAAM,CAACK,YAAY,CAAEC,eAAe,CAAC,CAAGtB,QAAQ,CAAC,CAC/CuB,IAAI,CAAEJ,QAAQ,CAACI,IAAI,CAAG,EAAE,CACxBC,UAAU,CAAEL,QAAQ,CAACK,UAAU,CAAG,EAAE,CACpCC,SAAS,CAAEN,QAAQ,CAACM,SAAS,CAAG,EAClC,CAAC,CAAC,CAEF,GAAI,CAACR,MAAM,CAAE,MAAO,KAAI,CAExB,mBACEZ,KAAA,CAAAE,SAAA,EAAAmB,QAAA,eACEvB,IAAA,CAACO,OAAO,EAACiB,OAAO,CAAET,OAAQ,CAAE,CAAC,cAC7Bb,KAAA,CAACG,aAAa,EAAAkB,QAAA,eACZvB,IAAA,OAAAuB,QAAA,CAAI,gBAAc,CAAI,CAAC,cACvBrB,KAAA,QAAAqB,QAAA,eACEvB,IAAA,UAAAuB,QAAA,CAAO,yBAAuB,CAAO,CAAC,cACtCvB,IAAA,CAACQ,KAAK,EACJiB,IAAI,CAAC,QAAQ,CACbC,KAAK,CAAER,YAAY,CAACE,IAAK,CACzBO,QAAQ,CAAGC,CAAC,EAAKT,eAAe,CAAC,CAC/B,GAAGD,YAAY,CACfE,IAAI,CAAES,QAAQ,CAACD,CAAC,CAACE,MAAM,CAACJ,KAAK,CAC/B,CAAC,CAAE,CACJ,CAAC,EACC,CAAC,cACNxB,KAAA,QAAAqB,QAAA,eACEvB,IAAA,UAAAuB,QAAA,CAAO,uBAAqB,CAAO,CAAC,cACpCvB,IAAA,CAACQ,KAAK,EACJiB,IAAI,CAAC,QAAQ,CACbC,KAAK,CAAER,YAAY,CAACG,UAAW,CAC/BM,QAAQ,CAAGC,CAAC,EAAKT,eAAe,CAAC,CAC/B,GAAGD,YAAY,CACfG,UAAU,CAAEQ,QAAQ,CAACD,CAAC,CAACE,MAAM,CAACJ,KAAK,CACrC,CAAC,CAAE,CACJ,CAAC,EACC,CAAC,cACNxB,KAAA,QAAAqB,QAAA,eACEvB,IAAA,UAAAuB,QAAA,CAAO,sBAAoB,CAAO,CAAC,cACnCvB,IAAA,CAACQ,KAAK,EACJiB,IAAI,CAAC,QAAQ,CACbC,KAAK,CAAER,YAAY,CAACI,SAAU,CAC9BK,QAAQ,CAAGC,CAAC,EAAKT,eAAe,CAAC,CAC/B,GAAGD,YAAY,CACfI,SAAS,CAAEO,QAAQ,CAACD,CAAC,CAACE,MAAM,CAACJ,KAAK,CACpC,CAAC,CAAE,CACJ,CAAC,EACC,CAAC,cACN1B,IAAA,CAACU,MAAM,EAACc,OAAO,CAAEA,CAAA,GAAMP,MAAM,CAAC,CAC5BG,IAAI,CAAEF,YAAY,CAACE,IAAI,CAAG,EAAE,CAC5BC,UAAU,CAAEH,YAAY,CAACG,UAAU,CAAG,EAAE,CACxCC,SAAS,CAAEJ,YAAY,CAACI,SAAS,CAAG,EACtC,CAAC,CAAE,CAAAC,QAAA,CAAC,MAAI,CAAQ,CAAC,cACjBvB,IAAA,CAACU,MAAM,EAACc,OAAO,CAAET,OAAQ,CAAAQ,QAAA,CAAC,QAAM,CAAQ,CAAC,EAC5B,CAAC,EAChB,CAAC,CAEP,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}