{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nexport const useTimer = () => {\n  _s();\n  const [time, setTime] = useState(25 * 60); // 25 minutes in seconds\n  const [isActive, setIsActive] = useState(false);\n  const [type, setType] = useState('work'); // work or break\n\n  useEffect(() => {\n    let interval;\n    if (isActive && time > 0) {\n      interval = setInterval(() => {\n        setTime(time => time - 1);\n      }, 1000);\n    } else if (time === 0) {\n      // Handle timer completion\n      handleTimerComplete();\n    }\n    return () => clearInterval(interval);\n  }, [isActive, time]);\n  const handleTimerComplete = () => {\n    // Play notification sound\n    const audio = new Audio('notification.mp3');\n    audio.play();\n\n    // Switch timer type\n    if (type === 'work') {\n      setTime(5 * 60); // 5 minute break\n      setType('break');\n    } else {\n      setTime(25 * 60);\n      setType('work');\n    }\n  };\n  return {\n    time,\n    isActive,\n    type,\n    setTime,\n    setIsActive,\n    setType\n  };\n};\n_s(useTimer, \"a77SML8yR6qWNYXP8t1kxA4+ASM=\");","map":{"version":3,"names":["useState","useEffect","useTimer","_s","time","setTime","isActive","setIsActive","type","setType","interval","setInterval","handleTimerComplete","clearInterval","audio","Audio","play"],"sources":["/Users/HariPrasad.Renganath/Documents/Temp Projects/Pomodoro clock/pomodoro-timer/src/hooks/useTimer.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nexport const useTimer = () => {\n  const [time, setTime] = useState(25 * 60); // 25 minutes in seconds\n  const [isActive, setIsActive] = useState(false);\n  const [type, setType] = useState('work'); // work or break\n\n  useEffect(() => {\n    let interval;\n    if (isActive && time > 0) {\n      interval = setInterval(() => {\n        setTime((time) => time - 1);\n      }, 1000);\n    } else if (time === 0) {\n      // Handle timer completion\n      handleTimerComplete();\n    }\n    return () => clearInterval(interval);\n  }, [isActive, time]);\n\n  const handleTimerComplete = () => {\n    // Play notification sound\n    const audio = new Audio('notification.mp3');\n    audio.play();\n    \n    // Switch timer type\n    if (type === 'work') {\n      setTime(5 * 60); // 5 minute break\n      setType('break');\n    } else {\n      setTime(25 * 60);\n      setType('work');\n    }\n  };\n\n  return { time, isActive, type, setTime, setIsActive, setType };\n};"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;;EAE1CC,SAAS,CAAC,MAAM;IACd,IAAIS,QAAQ;IACZ,IAAIJ,QAAQ,IAAIF,IAAI,GAAG,CAAC,EAAE;MACxBM,QAAQ,GAAGC,WAAW,CAAC,MAAM;QAC3BN,OAAO,CAAED,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;MAC7B,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,MAAM,IAAIA,IAAI,KAAK,CAAC,EAAE;MACrB;MACAQ,mBAAmB,CAAC,CAAC;IACvB;IACA,OAAO,MAAMC,aAAa,CAACH,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACJ,QAAQ,EAAEF,IAAI,CAAC,CAAC;EAEpB,MAAMQ,mBAAmB,GAAGA,CAAA,KAAM;IAChC;IACA,MAAME,KAAK,GAAG,IAAIC,KAAK,CAAC,kBAAkB,CAAC;IAC3CD,KAAK,CAACE,IAAI,CAAC,CAAC;;IAEZ;IACA,IAAIR,IAAI,KAAK,MAAM,EAAE;MACnBH,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;MACjBI,OAAO,CAAC,OAAO,CAAC;IAClB,CAAC,MAAM;MACLJ,OAAO,CAAC,EAAE,GAAG,EAAE,CAAC;MAChBI,OAAO,CAAC,MAAM,CAAC;IACjB;EACF,CAAC;EAED,OAAO;IAAEL,IAAI;IAAEE,QAAQ;IAAEE,IAAI;IAAEH,OAAO;IAAEE,WAAW;IAAEE;EAAQ,CAAC;AAChE,CAAC;AAACN,EAAA,CAlCWD,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}